"use strict";

var _testing = require("../testing");

describe("getLatestDescriptor", () => {
  test("api", async () => {
    (0, _testing.mockAPI)("/projects/project-id/branches/branch-id/commits?fileId=file-id&limit=1", {
      commits: [{
        id: "commit-id"
      }]
    });
    const response = await _testing.API_CLIENT.descriptors.getLatestDescriptor({
      projectId: "project-id",
      branchId: "branch-id",
      fileId: "file-id",
      sha: "sha"
    });
    expect(response).toEqual({
      branchId: "branch-id",
      fileId: "file-id",
      projectId: "project-id",
      sha: "sha"
    });
  });
  test("cli", async () => {
    (0, _testing.mockCLI)(["commits", "project-id", "branch-id", "--file-id", "file-id", "--limit", "1"], {
      commits: [{
        id: "commit-id"
      }]
    });
    const response = await _testing.CLI_CLIENT.descriptors.getLatestDescriptor({
      projectId: "project-id",
      branchId: "branch-id",
      fileId: "file-id",
      sha: "sha"
    });
    expect(response).toEqual({
      branchId: "branch-id",
      fileId: "file-id",
      projectId: "project-id",
      sha: "sha"
    });
  });
});