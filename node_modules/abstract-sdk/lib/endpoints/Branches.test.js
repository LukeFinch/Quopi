"use strict";

var _testing = require("../testing");

describe("#info", () => {
  test("api", async () => {
    (0, _testing.mockAPI)("/projects/project-id/branches/branch-id", {
      id: "branch-id"
    });
    const response = await _testing.API_CLIENT.branches.info({
      branchId: "branch-id",
      projectId: "project-id"
    });
    expect(response).toEqual({
      id: "branch-id"
    });
  });
  test("cli", async () => {
    (0, _testing.mockCLI)(["branch", "load", "project-id", "branch-id"], {
      id: "branch-id"
    });
    const response = await _testing.CLI_CLIENT.branches.info({
      branchId: "branch-id",
      projectId: "project-id"
    });
    expect(response).toEqual({
      id: "branch-id"
    });
  });
});
describe("#list", () => {
  test("api", async () => {
    (0, _testing.mockAPI)("/projects/project-id/branches/?", {
      data: {
        branches: [{
          id: "branch-id"
        }]
      }
    });
    const response = await _testing.API_CLIENT.branches.list({
      projectId: "project-id"
    });
    expect(response).toEqual([{
      id: "branch-id"
    }]);
  });
  test("api - filter", async () => {
    (0, _testing.mockAPI)("/projects/project-id/branches/?filter=mine", {
      data: {
        branches: [{
          id: "branch-id"
        }]
      }
    });
    const response = await _testing.API_CLIENT.branches.list({
      projectId: "project-id"
    }, {
      filter: "mine"
    });
    expect(response).toEqual([{
      id: "branch-id"
    }]);
  });
  test("cli", async () => {
    (0, _testing.mockCLI)(["branches", "project-id"], {
      branches: [{
        id: "branch-id"
      }]
    });
    const response = await _testing.CLI_CLIENT.branches.list({
      projectId: "project-id"
    });
    expect(response).toEqual([{
      id: "branch-id"
    }]);
  });
  test("cli - filter", async () => {
    (0, _testing.mockCLI)(["branches", "project-id", "--filter", "mine"], {
      branches: [{
        id: "branch-id"
      }]
    });
    const response = await _testing.CLI_CLIENT.branches.list({
      projectId: "project-id"
    }, {
      filter: "mine"
    });
    expect(response).toEqual([{
      id: "branch-id"
    }]);
  });
});