"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Activities = _interopRequireDefault(require("./endpoints/Activities"));

var _Assets = _interopRequireDefault(require("./endpoints/Assets"));

var _Branches = _interopRequireDefault(require("./endpoints/Branches"));

var _Changesets = _interopRequireDefault(require("./endpoints/Changesets"));

var _Collections = _interopRequireDefault(require("./endpoints/Collections"));

var _Comments = _interopRequireDefault(require("./endpoints/Comments"));

var _Commits = _interopRequireDefault(require("./endpoints/Commits"));

var _Data = _interopRequireDefault(require("./endpoints/Data"));

var _Descriptors = _interopRequireDefault(require("./endpoints/Descriptors"));

var _Endpoint = _interopRequireDefault(require("./endpoints/Endpoint"));

var _Files = _interopRequireDefault(require("./endpoints/Files"));

var _Layers = _interopRequireDefault(require("./endpoints/Layers"));

var _Memberships = _interopRequireDefault(require("./endpoints/Memberships"));

var _Notifications = _interopRequireDefault(require("./endpoints/Notifications"));

var _Organizations = _interopRequireDefault(require("./endpoints/Organizations"));

var _Pages = _interopRequireDefault(require("./endpoints/Pages"));

var _Previews = _interopRequireDefault(require("./endpoints/Previews"));

var _Projects = _interopRequireDefault(require("./endpoints/Projects"));

var _Shares = _interopRequireDefault(require("./endpoints/Shares"));

var _Users = _interopRequireDefault(require("./endpoints/Users"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Client {
  constructor(options = {}) {
    _defineProperty(this, "activities", void 0);

    _defineProperty(this, "assets", void 0);

    _defineProperty(this, "branches", void 0);

    _defineProperty(this, "changesets", void 0);

    _defineProperty(this, "collections", void 0);

    _defineProperty(this, "comments", void 0);

    _defineProperty(this, "commits", void 0);

    _defineProperty(this, "data", void 0);

    _defineProperty(this, "descriptors", void 0);

    _defineProperty(this, "files", void 0);

    _defineProperty(this, "layers", void 0);

    _defineProperty(this, "memberships", void 0);

    _defineProperty(this, "notifications", void 0);

    _defineProperty(this, "organizations", void 0);

    _defineProperty(this, "pages", void 0);

    _defineProperty(this, "previews", void 0);

    _defineProperty(this, "projects", void 0);

    _defineProperty(this, "shares", void 0);

    _defineProperty(this, "users", void 0);

    _defineProperty(this, "cache", new Map());

    options = _objectSpread({
      accessToken: process.env.ABSTRACT_TOKEN,
      apiUrl: "https://api.goabstract.com",
      cliPath: "/Applications/Abstract.app/Contents/Resources/app.asar.unpacked/node_modules/@elasticprojects/abstract-cli/bin/abstract-cli",
      maxCacheSize: 0,
      previewsUrl: "https://previews.goabstract.com",
      transportMode: "api",
      webUrl: "https://app.goabstract.com"
    }, options);
    this.activities = new _Activities.default(this, options);
    this.assets = new _Assets.default(this, options);
    this.branches = new _Branches.default(this, options);
    this.changesets = new _Changesets.default(this, options);
    this.collections = new _Collections.default(this, options);
    this.comments = new _Comments.default(this, options);
    this.commits = new _Commits.default(this, options);
    this.data = new _Data.default(this, options);
    this.descriptors = new _Descriptors.default(this, options);
    this.files = new _Files.default(this, options);
    this.layers = new _Layers.default(this, options);
    this.memberships = new _Memberships.default(this, options);
    this.notifications = new _Notifications.default(this, options);
    this.organizations = new _Organizations.default(this, options);
    this.pages = new _Pages.default(this, options);
    this.previews = new _Previews.default(this, options);
    this.projects = new _Projects.default(this, options);
    this.shares = new _Shares.default(this, options);
    this.users = new _Users.default(this, options); // This is only for informative errors; we proxy each method
    // on each endpoint so we can cache the last method name called.
    // This allows errors to explicitly state which method is undefined
    // in a given transport, and avoids using Function.caller which
    // mostly doesn't work and is nonstandard.

    return new Proxy(this, {
      get(target, endpoint) {
        if (typeof target[endpoint] === "object" && target[endpoint]) {
          return new Proxy(target[endpoint], {
            get(target, key) {
              if (typeof target[key] === "function" && !_Endpoint.default.prototype.hasOwnProperty(key)) {
                target.lastCalledEndpoint = `${endpoint}.${key}`;
              }

              return target[key];
            }

          });
        }

        return target[endpoint];
      }

    });
  }

}

exports.default = Client;