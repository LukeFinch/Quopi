"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Cursor {
  constructor(request) {
    _defineProperty(this, "lastResponse", void 0);

    _defineProperty(this, "meta", void 0);

    _defineProperty(this, "request", void 0);

    this.request = request;
    return this;
  }

  _next(first) {
    const makeRequest = async () => {
      if (!first && !this.meta.nextOffset) return;
      const response = await this.request(this.meta);
      this.meta = response.meta;
      return response;
    };

    this.lastResponse = this.lastResponse ? this.lastResponse.then(makeRequest) : makeRequest();
    const promise = this.lastResponse.then(response => response && response.data);
    promise.next = this.next.bind(this);
    const cursorPromise = promise;
    return cursorPromise;
  }

  then(onFulfilled, onRejected) {
    const cursorPromise = this._next(true);

    cursorPromise.then(onFulfilled, onRejected);
    return cursorPromise;
  }

  next() {
    return this._next();
  }

}

exports.default = Cursor;