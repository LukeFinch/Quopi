"use strict";

var utils = _interopRequireWildcard(require("./utils"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

test("inferShareId", () => {
  expect(utils.inferShareId({
    url: "share.goabstract.com/share-id"
  })).toBe("share-id");
});
test("inferShareId throws", () => {
  try {
    utils.inferShareId({});
  } catch (error) {
    expect(error).toBeInstanceOf(Error);
    expect(error.message).toContain("Could not infer share id");
  }
});
test("isNodeEnvironment", () => {
  expect(utils.isNodeEnvironment()).toBe(true);
});